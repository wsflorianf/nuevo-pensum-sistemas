---
import { type MateriaType } from '@/types/informacion'

interface Props extends MateriaType {}

//Props del componente
const { codigo, nombre, creditos, td, tc, ta, urlSyllabus, tipo } = Astro.props
---

<a
  class='materia'
  href={tipo==='AI'?`opcion/${codigo}`:urlSyllabus}
  data-name={nombre}
  data-type={tipo}
  data-code={codigo}
  data-tipo={tipo}
  onclick={tipo === 'AI' ? '' : 'event.preventDefault()'}
>
  <div class='cod'><span>Código: </span>{codigo}</div>

  <!-- Se quita temporalmente los siguientes campos hasta definir una estructura concreta -->

  <!-- <div class='pre'><span>Pre:</span></div>
  <div class='corr'><span>Corr:</span></div> -->

  <div class='creditos'><span>Créditos: </span>{creditos}</div>
  <div class='horas'>
    <div class='directo'><span>TD: </span>{td}</div>
    <div class='colaborativo'><span>TC: </span>{tc}</div>
    <div class='autonomo'><span>TA: </span>{ta}</div>
  </div>
  <div transition:name={nombre} class={'nombre ' + tipo}>
    {nombre}
  </div>
</a>

<script>
  function isMobile() {
    return /Android|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i.test(
      navigator.userAgent
    )
  }

  //Se seleccionan todas las materias para asignarles el evento necesario según corresponda el tipo (EX, AI o el resto)
  document.querySelectorAll('.materia').forEach((materia) => {
    //Se obtiene el tipo del atributo data-type
    let tipo = materia.getAttribute('data-type')

    //Se previene dar comportamiento si existe alguna materia sin tipo
    if (!tipo || tipo == 'AI') {
    }
    //Si es EX no se le asigna eventListener
    else if (tipo == 'EX') {
      materia.addEventListener('click', () => {
        alert("¡Puedes inscribir materias extrínsecas de cualquier proyecto curricular!")
      })
    }
    //Para las demás se muestra una ventana modal con su syllabus
    else {
      //Si está en modo movil se quita el atributo onlcick de todas las materias para que el elemnto "a" actúe normal

      if (isMobile()) {
        materia.removeAttribute('onclick')
      } else {
        materia.addEventListener('click', () => {
          let url = materia.getAttribute('href') || ''

          //Se lleva hacia la parte superior del sitio
          scrollTo({ top: 0 })

          //Se quita temporalmente el scroll al sitio
          document.body.style.overflow = 'hidden'

          const pdfView = document.querySelector('#modal-pdf')
          const iframe = document.createElement('iframe')

          let titulo = pdfView?.querySelector('h2')

          if (titulo) {
            titulo.innerText = materia.getAttribute('data-name') || ''
          }

          //Se establece el modal como abierto
          pdfView?.setAttribute('data-mode', 'open')

          //Se agrega el iframe para visualizar el PDF con su respectiva url, la url se obtiene del atributo data-url de la materia
          iframe.src = url
          pdfView?.appendChild(iframe)
        })
      }
    }
  })
</script>

<style>
  .materia {
    transition: opacity 0.3s ease;
  }
  a {
    display: block;
    text-decoration: none;
    color: black;
  }

  .materia {
    border: 1px black solid;
    width: auto;
  }

  div{
    background-color: #fff;
  }

  .materia div {
    padding: 0 4px;
    width: 100%;
    border: 1px black solid;
  }

  span {
    font-weight: 500;
  }

  .materia {
    display: flex;
    flex-direction: column;
    font-size: 0.7rem;
    height: 140px;
    width: 100%;
    transition: 0.2s all;
  }

  .materia:hover {
      cursor: pointer;
      transform: scale(1.05);
      box-shadow: 0 0 8px 0.5px rgb(0, 0, 0, 0.5);
    }

  .nombre {
    display: grid;
    place-content: center;
    text-align: center;
    flex-grow: 1;
    font-size: 0.8rem;
    font-weight: 600;
    padding: 2px;
    justify-self: center;
  }

  .horas {
    display: flex;
    justify-content: space-between;
  }

  .horas div {
    border: none;
  }

  .CO {
    background-color: #ff7a7a;
  }

  .CB {
    background-color: #81f0fa;
  }

  .BI {
    background-color: #a4d175;
  }

  .AI, .OPCION {
    background-color: #b77ecb;
  }

  .EX {
    background-color: #ffac52;
  }
  
  @media screen and (max-width: 1300px) {
    .materia {
      height: 120px;
    }

    .materia div {
      padding: 0 2px;
    }

    .nombre {
      padding: 1px;
    }
  }

</style>
